<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jhh.dao.BorrowListMapper">
	<resultMap id="BaseResultMap" type="com.jhh.model.BorrowList">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="per_id" property="perId" jdbcType="INTEGER" />
		<result column="prod_id" property="prodId" jdbcType="INTEGER" />
		<result column="borr_type" property="borrType" jdbcType="VARCHAR" />
		<result column="askborr_date" property="askborrDate" jdbcType="TIMESTAMP" />
		<result column="borr_num" property="borrNum" jdbcType="VARCHAR" />
		<result column="makeborr_date" property="makeborrDate"
			jdbcType="TIMESTAMP" />
		<result column="pay_date" property="payDate" jdbcType="TIMESTAMP" />
		<result column="planrepay_date" property="planrepayDate"
			jdbcType="TIMESTAMP" />
		<result column="act_repay_date" property="actRepayDate"
			jdbcType="TIMESTAMP" />
		<result column="borr_status" property="borrStatus" jdbcType="VARCHAR" />
		<result column="plan_repay" property="planRepay" jdbcType="DECIMAL" />
		<result column="act_repay_amount" property="actRepayAmount"
			jdbcType="DECIMAL" />
		<result column="ispay" property="ispay" jdbcType="INTEGER" />
		<result column="term_id" property="termId" jdbcType="INTEGER" />
		<result column="borr_amount" property="borrAmount" jdbcType="DECIMAL" />
		<result column="per_coupon_id" property="perCouponId" jdbcType="INTEGER" />
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="update_user" property="updateUser" jdbcType="INTEGER" />
		<result column="creation_date" property="creationDate"
			jdbcType="TIMESTAMP" />
		<result column="creation_user" property="creationUser"
			jdbcType="INTEGER" />
		<result column="sync" property="sync" jdbcType="CHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, per_id, prod_id, borr_type, askborr_date, borr_num,
		makeborr_date,
		pay_date,
		planrepay_date, act_repay_date, borr_status,
		plan_repay, act_repay_amount, ispay,
		term_id, borr_amount,
		per_coupon_id, update_date, update_user,
		creation_date, creation_user,
		sync
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from ym_borrow_list
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		ym_borrow_list
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.jhh.model.BorrowList">
		insert into ym_borrow_list
		(id, per_id, prod_id,
		borr_type, askborr_date, borr_num,
		makeborr_date,
		pay_date, planrepay_date,
		act_repay_date, borr_status, plan_repay,
		act_repay_amount, ispay, term_id,
		borr_amount, per_coupon_id,
		update_date,
		update_user, creation_date, creation_user,
		sync)
		values
		(#{id,jdbcType=INTEGER}, #{perId,jdbcType=INTEGER},
		#{prodId,jdbcType=INTEGER},
		#{borrType,jdbcType=VARCHAR},
		#{askborrDate,jdbcType=TIMESTAMP}, #{borrNum,jdbcType=VARCHAR},
		#{makeborrDate,jdbcType=TIMESTAMP}, #{payDate,jdbcType=TIMESTAMP},
		#{planrepayDate,jdbcType=TIMESTAMP},
		#{actRepayDate,jdbcType=TIMESTAMP}, #{borrStatus,jdbcType=VARCHAR},
		#{planRepay,jdbcType=DECIMAL},
		#{actRepayAmount,jdbcType=DECIMAL},
		#{ispay,jdbcType=INTEGER}, #{termId,jdbcType=INTEGER},
		#{borrAmount,jdbcType=DECIMAL}, #{perCouponId,jdbcType=INTEGER},
		#{updateDate,jdbcType=TIMESTAMP},
		#{updateUser,jdbcType=INTEGER},
		#{creationDate,jdbcType=TIMESTAMP}, #{creationUser,jdbcType=INTEGER},
		#{sync,jdbcType=CHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.jhh.model.BorrowList">
		insert into ym_borrow_list
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="perId != null">
				per_id,
			</if>
			<if test="prodId != null">
				prod_id,
			</if>
			<if test="borrType != null">
				borr_type,
			</if>
			<if test="askborrDate != null">
				askborr_date,
			</if>
			<if test="borrNum != null">
				borr_num,
			</if>
			<if test="makeborrDate != null">
				makeborr_date,
			</if>
			<if test="payDate != null">
				pay_date,
			</if>
			<if test="planrepayDate != null">
				planrepay_date,
			</if>
			<if test="actRepayDate != null">
				act_repay_date,
			</if>
			<if test="borrStatus != null">
				borr_status,
			</if>
			<if test="planRepay != null">
				plan_repay,
			</if>
			<if test="actRepayAmount != null">
				act_repay_amount,
			</if>
			<if test="ispay != null">
				ispay,
			</if>
			<if test="termId != null">
				term_id,
			</if>
			<if test="borrAmount != null">
				borr_amount,
			</if>
			<if test="perCouponId != null">
				per_coupon_id,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="creationDate != null">
				creation_date,
			</if>
			<if test="creationUser != null">
				creation_user,
			</if>
			<if test="sync != null">
				sync,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="perId != null">
				#{perId,jdbcType=INTEGER},
			</if>
			<if test="prodId != null">
				#{prodId,jdbcType=INTEGER},
			</if>
			<if test="borrType != null">
				#{borrType,jdbcType=VARCHAR},
			</if>
			<if test="askborrDate != null">
				#{askborrDate,jdbcType=TIMESTAMP},
			</if>
			<if test="borrNum != null">
				#{borrNum,jdbcType=VARCHAR},
			</if>
			<if test="makeborrDate != null">
				#{makeborrDate,jdbcType=TIMESTAMP},
			</if>
			<if test="payDate != null">
				#{payDate,jdbcType=TIMESTAMP},
			</if>
			<if test="planrepayDate != null">
				#{planrepayDate,jdbcType=TIMESTAMP},
			</if>
			<if test="actRepayDate != null">
				#{actRepayDate,jdbcType=TIMESTAMP},
			</if>
			<if test="borrStatus != null">
				#{borrStatus,jdbcType=VARCHAR},
			</if>
			<if test="planRepay != null">
				#{planRepay,jdbcType=DECIMAL},
			</if>
			<if test="actRepayAmount != null">
				#{actRepayAmount,jdbcType=DECIMAL},
			</if>
			<if test="ispay != null">
				#{ispay,jdbcType=INTEGER},
			</if>
			<if test="termId != null">
				#{termId,jdbcType=INTEGER},
			</if>
			<if test="borrAmount != null">
				#{borrAmount,jdbcType=DECIMAL},
			</if>
			<if test="perCouponId != null">
				#{perCouponId,jdbcType=INTEGER},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=INTEGER},
			</if>
			<if test="creationDate != null">
				#{creationDate,jdbcType=TIMESTAMP},
			</if>
			<if test="creationUser != null">
				#{creationUser,jdbcType=INTEGER},
			</if>
			<if test="sync != null">
				#{sync,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jhh.model.BorrowList">
		update ym_borrow_list
		<set>
			<if test="perId != null">
				per_id = #{perId,jdbcType=INTEGER},
			</if>
			<if test="prodId != null">
				prod_id = #{prodId,jdbcType=INTEGER},
			</if>
			<if test="borrType != null">
				borr_type = #{borrType,jdbcType=VARCHAR},
			</if>
			<if test="askborrDate != null">
				askborr_date = #{askborrDate,jdbcType=TIMESTAMP},
			</if>
			<if test="borrNum != null">
				borr_num = #{borrNum,jdbcType=VARCHAR},
			</if>
			<if test="makeborrDate != null">
				makeborr_date = #{makeborrDate,jdbcType=TIMESTAMP},
			</if>
			<if test="payDate != null">
				pay_date = #{payDate,jdbcType=TIMESTAMP},
			</if>
			<if test="planrepayDate != null">
				planrepay_date = #{planrepayDate,jdbcType=TIMESTAMP},
			</if>
			<if test="actRepayDate != null">
				act_repay_date = #{actRepayDate,jdbcType=TIMESTAMP},
			</if>
			<if test="borrStatus != null">
				borr_status = #{borrStatus,jdbcType=VARCHAR},
			</if>
			<if test="planRepay != null">
				plan_repay = #{planRepay,jdbcType=DECIMAL},
			</if>
			<if test="actRepayAmount != null">
				act_repay_amount = #{actRepayAmount,jdbcType=DECIMAL},
			</if>
			<if test="ispay != null">
				ispay = #{ispay,jdbcType=INTEGER},
			</if>
			<if test="termId != null">
				term_id = #{termId,jdbcType=INTEGER},
			</if>
			<if test="borrAmount != null">
				borr_amount = #{borrAmount,jdbcType=DECIMAL},
			</if>
			<if test="perCouponId != null">
				per_coupon_id = #{perCouponId,jdbcType=INTEGER},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=INTEGER},
			</if>
			<if test="creationDate != null">
				creation_date = #{creationDate,jdbcType=TIMESTAMP},
			</if>
			<if test="creationUser != null">
				creation_user = #{creationUser,jdbcType=INTEGER},
			</if>
			<if test="sync != null">
				sync = #{sync,jdbcType=CHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jhh.model.BorrowList">
		update
		ym_borrow_list
		set per_id = #{perId,jdbcType=INTEGER},
		prod_id =
		#{prodId,jdbcType=INTEGER},
		borr_type = #{borrType,jdbcType=VARCHAR},
		askborr_date = #{askborrDate,jdbcType=TIMESTAMP},
		borr_num =
		#{borrNum,jdbcType=VARCHAR},
		makeborr_date =
		#{makeborrDate,jdbcType=TIMESTAMP},
		pay_date =
		#{payDate,jdbcType=TIMESTAMP},
		planrepay_date =
		#{planrepayDate,jdbcType=TIMESTAMP},
		act_repay_date =
		#{actRepayDate,jdbcType=TIMESTAMP},
		borr_status =
		#{borrStatus,jdbcType=VARCHAR},
		plan_repay =
		#{planRepay,jdbcType=DECIMAL},
		act_repay_amount =
		#{actRepayAmount,jdbcType=DECIMAL},
		ispay = #{ispay,jdbcType=INTEGER},
		term_id = #{termId,jdbcType=INTEGER},
		borr_amount =
		#{borrAmount,jdbcType=DECIMAL},
		per_coupon_id =
		#{perCouponId,jdbcType=INTEGER},
		update_date =
		#{updateDate,jdbcType=TIMESTAMP},
		update_user =
		#{updateUser,jdbcType=INTEGER},
		creation_date =
		#{creationDate,jdbcType=TIMESTAMP},
		creation_user =
		#{creationUser,jdbcType=INTEGER},
		sync = #{sync,jdbcType=CHAR}
		where id
		= #{id,jdbcType=INTEGER}
	</update>
	<!-- 根据per_id查询当前borrow_list -->
	<select id="selectNow" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from ym_borrow_list
		where id=(select MAX(id)
		from ym_borrow_list
		where
		per_id = #{per_id,jdbcType=INTEGER})
	</select>
	<!-- 根据per_id查询用户所有borrow_list -->
	<select id="selectByPerId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from ym_borrow_list
		where per_id = #{per_id,jdbcType=INTEGER}
	</select>

	<!-- 根据per_id,借款状态查询borrow_list -->
	<select id="selectBorrowingByPerId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ym_borrow_list
		where per_id = #{per_id,jdbcType=INTEGER}
		and
		borr_status = #{borr_status,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据per_id,借款状态查询borrow_list -->
	<select id="selectByBorrNum" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ym_borrow_list
		where borr_num = #{0}		
	</select>
	
	<!-- 根据per_id,看用户是否有除了已取消，已还清，逾期结清以外的订单 -->
	<select id="selectDoing" resultType="java.lang.Integer">
		select
		count(*)
		from ym_borrow_list
		where per_id = #{per_id,jdbcType=INTEGER}
		and
		borr_status not in ('BS006','BS007','BS009','BS010')
	</select>
	<select id="getMyBorrowList" resultType="com.jhh.model.BorrowList">
		SELECT bl.id,bl.prod_id AS prodId,bl.borr_num
		AS borrNum,bl.borr_amount+(SELECT
		amount FROM ym_product_charge_model
		WHERE charge_name = 'letter' AND
		product_id = bl.`prod_id` LIMIT 0,1)+
		(SELECT amount
		FROM ym_product_charge_model WHERE charge_name =
		'managecost' AND
		product_id = bl.`prod_id` LIMIT
		0,1)+(pt.`maximum_amount` * pt.`monthly_rate`)-
		CASE WHEN ypc.amount IS
		NULL THEN 0 ELSE ypc.amount END
		AS borrAmount,pt.term_value AS
		termValue,
		maximum_amount AS maximumAmount,bl.plan_repay AS
		planRepay,bl.borr_status AS
		borrStatus,getCodeValue('borr_status',bl.borr_status) AS
		borrStatusName,
		bl.askborr_date AS askborrDate
		FROM `ym_borrow_list` bl
		LEFT JOIN ym_product_term pt ON pt.product_id =
		bl.prod_id
		LEFT JOIN
		`ym_per_coupon` ypc ON ypc.id = bl.per_coupon_id
		WHERE
		bl.per_id = #{0}
		ORDER BY bl.creation_date DESC LIMIT #{1},#{2}
	</select>


	<select id="getMingtianhuankuanId" resultType="com.jhh.model.BorrowList">
		SELECT b.id,b.per_id AS perId,b.`pay_date` AS payDate,p.`repay_date`
		AS repayDate FROM
		ym_borrow_list b LEFT JOIN
		ym_repayment_plan p ON
		p.`contract_id` =
		b.`id`
		WHERE b.borr_status='BS004' AND p.`is_settle`
		=
		0
		AND
		p.`repay_date` <![CDATA[   <  ]]>
		#{0}
		AND
		p.`repay_date` <![CDATA[   >  ]]>
		#{1}
	</select>
	<select id="selectByBorrId" resultType="com.jhh.model.BorrPerInfo"
			parameterType="java.lang.Integer">
		SELECT bl.`id` AS
		borrId,pm.`name`,pt.`monthly_rate`,rp.surplus_quota,
		rp.`surplus_penalty`,rp.`surplus_penalty_Interes`,
		pt.`maximum_amount`,pt.`term_value`,pm.`phone` FROM
		`ym_borrow_list` bl
		LEFT JOIN
		`ym_product` p ON bl.`prod_id` = p.`id`
		LEFT JOIN
		`ym_product_term` pt
		ON pt.`product_id` = p.`id`
		LEFT JOIN
		`personInfoMode` pm ON pm.`perId`
		= bl.`per_id` LEFT JOIN
		`ym_repayment_plan` rp ON rp.`contract_id` = bl.`id`
		WHERE bl.`id` =
		#{borrId}
	</select>
	
	<update id="updateByBrroNum" parameterType="com.jhh.model.BorrowList">
		update ym_borrow_list
		<set>
			<if test="perId != null">
				per_id = #{perId,jdbcType=INTEGER},
			</if>
			<if test="prodId != null">
				prod_id = #{prodId,jdbcType=INTEGER},
			</if>
			<if test="borrType != null">
				borr_type = #{borrType,jdbcType=VARCHAR},
			</if>
			<if test="askborrDate != null">
				askborr_date = #{askborrDate,jdbcType=TIMESTAMP},
			</if>
			<if test="makeborrDate != null">
				makeborr_date = #{makeborrDate,jdbcType=TIMESTAMP},
			</if>
			<if test="payDate != null">
				pay_date = #{payDate,jdbcType=TIMESTAMP},
			</if>
			<if test="planrepayDate != null">
				planrepay_date = #{planrepayDate,jdbcType=TIMESTAMP},
			</if>
			<if test="actRepayDate != null">
				act_repay_date = #{actRepayDate,jdbcType=TIMESTAMP},
			</if>
			<if test="borrStatus != null">
				borr_status = #{borrStatus,jdbcType=VARCHAR},
			</if>
			<if test="planRepay != null">
				plan_repay = #{planRepay,jdbcType=DECIMAL},
			</if>
			<if test="actRepayAmount != null">
				act_repay_amount = #{actRepayAmount,jdbcType=DECIMAL},
			</if>
			<if test="ispay != null">
				ispay = #{ispay,jdbcType=INTEGER},
			</if>
			<if test="termId != null">
				term_id = #{termId,jdbcType=INTEGER},
			</if>
			<if test="borrAmount != null">
				borr_amount = #{borrAmount,jdbcType=DECIMAL},
			</if>
			<if test="perCouponId != null">
				per_coupon_id = #{perCouponId,jdbcType=INTEGER},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=INTEGER},
			</if>
			<if test="creationDate != null">
				creation_date = #{creationDate,jdbcType=TIMESTAMP},
			</if>
			<if test="creationUser != null">
				creation_user = #{creationUser,jdbcType=INTEGER},
			</if>
			<if test="sync != null">
				sync = #{sync,jdbcType=CHAR},
			</if>
		</set>
		where borr_num = #{borrNum,jdbcType=VARCHAR}
	</update>
	<select id="selectByPrimaryKey2" resultType="com.jhh.model.BorrowList"
		parameterType="java.lang.Integer">
		SELECT id,per_id AS perId,prod_id AS prodId,borr_type AS
		borrType,
		askborr_date AS askborrDate,borr_num AS borrNum,makeborr_date
		AS makeborrDate,
		pay_date AS payDate,planrepay_date AS
		planrepayDate,act_repay_date AS
		actRepayDate,
		borr_status AS
		borrStatus,plan_repay AS planRepay,act_repay_amount AS
		actRepayAmount,
		ispay,term_id AS termId,borr_amount AS borrAmount,
		update_date AS
		updateDate,update_user AS updateUser,creation_date AS
		creationDate,
		creation_user AS creationUser,sync FROM `ym_borrow_list` WHERE id =
		#{id}
	</select>
	
	<!-- 订单信息 根据borr_status判断订单状态：BS001申请中，BS008 BS009审核未通过，BS002 BS003 BS011 BS012 审核通过，BS004 BS005 BS006 BS010 已放款-->
	<select id="getBorrowingOrder" resultType="com.jhh.model.BorrowingExpertsOrder" parameterType="java.lang.String">
		SELECT borr_num order_no,DATE_FORMAT(b.creation_date, '%Y-%m-%d') order_time,borr_amount order_amount,c.term_value order_term,1 AS term_unit,
		CASE b.borr_status WHEN 'BS001' THEN 0 
		WHEN 'BS002' THEN 1 WHEN 'BS003' THEN 1 WHEN 'BS011' THEN 1 WHEN 'BS012' THEN 1 
		WHEN 'BS008' THEN 2 WHEN 'BS009' THEN 2
		WHEN 'BS004' THEN 3 WHEN 'BS005' THEN 3 WHEN 'BS006' THEN 3 WHEN 'BS010' THEN 3
		END AS order_status,
		a.phone user_mobile FROM ym_person a, ym_borrow_list b,ym_product_term c
		WHERE a.id=b.per_id AND b.prod_id=c.product_id AND borr_status <![CDATA[ <> ]]> 'BS007' AND source= #{source,jdbcType=VARCHAR}
		AND b.update_date > DATE_SUB(NOW(), INTERVAL 2 DAY)
	</select>

	<select id="getRobotData" resultType="com.jhh.model.RobotData">
		SELECT b.borr_num AS borrNum,
		p.phone AS phone ,
		DATE_FORMAT(b.pay_date,'%Y-%m-%d') AS payDate,
		r.month_money as money,
		DATE_FORMAT(b.planrepay_date,'%Y-%m-%d') AS planRepayDate,
		0 AS interest,
		(surplus_money+
		surplus_interest+
		surplus_penalty+
		surplus_penalty_Interes) AS total
		FROM ym_borrow_list b,ym_repayment_plan r,ym_person p
		WHERE b.per_id = p.id AND r.contract_id = b.id and
		b.borr_status = 'BS004' AND DATEDIFF(NOW(),b.planrepay_date)=0
	</select>

	<select id="sendMoneyManagement" resultType="com.jhh.model.MoneyManagement" parameterType="map">
			SELECT
			DISTINCT
			y.id AS id,
			y.borr_num AS borrNum,
			y.pay_date AS payDate,
			ym_card.name AS name,
			ym_card.card_num AS `cardNum`,
			ym_repayment_plan.month_quota AS `monthQuota`,
			ym_order.act_amount AS `borrAmount`,
			(ym_product_term.maximum_amount*ym_product_term.monthly_rate) AS interest,
			ym_repayment_plan.month_money AS `monthMoney`,
			(ym_repayment_plan.month_money+(ym_product_term.maximum_amount*ym_product_term.monthly_rate))AS principalInterest,
			SUBSTR(ym_product.product_name,INSTR(ym_product.product_name,"-")+1) AS `lengthMaturity`,
			y.makeborr_date AS `makeborrDate`,
			y.pay_date AS `interestAccrual`,
			y.pay_date AS `datedDate`,
			DATE_FORMAT(y.planrepay_date,'%Y-%m-%d') AS `planrepayDate`,
			ym_bank_list.bank_name AS `bankName`,
			ym_card.`name` AS `accountName`,
			ym_bank.bank_num AS `bankNum`,
			ym_person.phone AS `phone`,
			ym_product.product_name AS `productName`,
			(ym_repayment_plan.month_quota - y.borr_amount) AS recoverableAmount,
			m1.amount AS `platformAmount`,
			m2.amount AS `auditAmount`,
			ym_per_coupon.amount AS `discountsAmount`,
			ym_order.serial_no AS `serialNo`,
			ym_review.employ_num AS `employNum`,
			ym_riewer.emplloyee_name `emplloyeeName`,
			ym_code_value.meaning AS `meaning`,
			'10.43%' AS expectedAnnualized,
			'到期本息' AS paymentMethod,
			'天' AS termType
			FROM
			ym_borrow_list AS y
			LEFT JOIN ym_card ON y.per_id = ym_card.per_id
			INNER JOIN ym_product ON y.prod_id = ym_product.id
			INNER JOIN ym_person ON y.per_id = ym_person.id
			INNER JOIN ym_bank ON ym_person.id = ym_bank.per_id AND ym_bank.status = 1
			INNER JOIN ym_bank_list ON ym_bank.bank_id = ym_bank_list.id
			INNER JOIN ym_repayment_plan ON y.id = ym_repayment_plan.contract_id
			INNER JOIN ym_code_value ON ym_code_value.code_code = ym_person.source
			AND code_type = 'register_source'
			INNER JOIN ym_product_term ON ym_product.id = ym_product_term.product_id
			INNER JOIN ym_product_charge_model AS m1 ON ym_product.id = m1.product_id AND m1.charge_name = 'managecost'
			INNER JOIN ym_product_charge_model AS m2 ON ym_product.id = m2.product_id AND m2.charge_name = 'letter'
			LEFT JOIN ym_per_coupon ON y.per_coupon_id = ym_per_coupon.id
			INNER JOIN ym_order ON y.id = ym_order.conctact_id AND  ym_order.type='1' AND ym_order.rl_state='s'
			INNER JOIN ym_review ON y.id = ym_review.borr_id
			INNER JOIN ym_riewer ON ym_review.employ_num = ym_riewer.employ_num

			WHERE  y.pay_date BETWEEN #{beginDate} AND  #{endDate}
			ORDER BY y.pay_date
	</select>

	<select id="sendMoneyManagementSecond" resultType="com.jhh.model.MoneyManagementSecond" parameterType="map">
		  SELECT
		  '' AS spreadName,
		  '' AS loanCustom,
		  bl.borr_amount AS borrAmount,
		  '10.43%' AS expectedAnnualized,
		  '到期本息' AS modeRepayment,
		  pt.term_value AS lifeLoan,
		  '天' AS termType,
		  '100' AS investmentAmount,
		  '' AS investmentCeilingAmount,
		  '' AS InvestorPassword,
		  yc.name AS realName,
		  yc.sex AS sex,
		  YEAR(NOW()) - LEFT(yc.birthday, 4) AS age,
		  priv.education AS education,
		  priv.marry AS isMarry,
		  priv.profession AS profession,
		  '消费贷' AS purposeLoan,
		  priv.monthlypay AS monthlypay,
		  '未知' AS housingConditions,
		  '未知' AS isCar,
		  '是' AS idCard,
		  '否' AS residenceBooklet,
		  '是' AS creditReport,
		  '否' AS publicBankNo,
		  '否' AS jobLetter,
		  '否' AS proofMarriage,
		  '消费' AS borrDescribe,
		  yp.phone AS loanPhone,
		  yc.card_num AS idCardNum
		FROM
		  ym_borrow_list AS bl
		  INNER JOIN ym_person yp ON yp.id = bl.per_id
		  INNER JOIN ym_card yc ON yp.id = yc.per_id
		  INNER JOIN ym_private priv ON yp.id = priv.per_id
		  INNER JOIN ym_product_term pt ON pt.product_id = bl.prod_id
		WHERE bl.pay_date BETWEEN  #{beginDate} AND  #{endDate}
		ORDER BY bl.pay_date
	</select>


	<select id="sendMoneyToHaier" resultType="com.jhh.model.MoneyHaier" parameterType="map">
		SELECT yo.serial_no orderCode, yo.rl_date payDate,act_amount money
		FROM ym_order yo
		WHERE  yo.rl_date BETWEEN #{beginDate} AND  #{endDate} and TYPE IN (12,13,14) AND rl_state = 's'
	</select>
</mapper>