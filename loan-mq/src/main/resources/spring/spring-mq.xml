<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/rabbit
           http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">
           
  <!--配置connection-factory，指定连接rabbit server参数 -->
	<rabbit:connection-factory id="cachingConnectionFactory"
		username="${mq.username}" password="${mq.password}" host="${mq.host}" port="${mq.port}"
		publisher-confirms="true"
		 />
		<!--  publisher-confirms="true"  publisher-returns="true"  -->
		
	<!-- 	
		<bean id="rabbitTxManager"
		      class="org.springframework.amqp.rabbit.transaction.RabbitTransactionManager">
		    <property name="connectionFactory" ref="cachingConnectionFactory"/>
		</bean>
	<rabbit:listener-container  connection-factory="cachingConnectionFactory" transaction-manager="rabbitTxManager"  channel-transacted="true" >
	     <rabbit:listener ref="sendMsgProducer" method="send" queue-names="queueTest"  /> 
	</rabbit:listener-container> -->
	
	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template  id="transactionTemplate"  connection-factory="cachingConnectionFactory" 
	    exchange="exchangeTest" 
	    queue="queueTest"
	    mandatory="true"
	    routing-key="queueTestKey"
         />
         <!--
	    channel-transacted="true"
 		confirm-callback="confirmCallBackListener"  
        return-callback="returnCallBackListener"   
         -->
      <!--  <bean id="rabbitTemplate" class="org.springframework.amqp.rabbit.AsyncRabbitTemplate"> 
       	<constructor-arg name="connectionFactory" ref="cachingConnectionFactory" />
       	<constructor-arg name="exchange" value="exchangeTest" />
       	<constructor-arg name="routingKey" value="queueTestKey" />
       	<constructor-arg name="replyQueue" value="queueTest" />
    </bean>  --> 

		
	<!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
	<rabbit:admin connection-factory="cachingConnectionFactory" />

	<!--定义queue -->
	<rabbit:queue  name="queueTest" durable="true" auto-delete="false" exclusive="false">
	</rabbit:queue>
	<!-- 定义direct exchange，绑定queueTest -->
	<rabbit:direct-exchange   name="exchangeTest" durable="true" auto-delete="false">
		<rabbit:bindings>
			<rabbit:binding  queue="queueTest" key="queueTestKey"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<!-- 消息接收者-->
	 
	<!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象   -->
	
    <!-- <rabbit:listener-container connection-factory="cachingConnectionFactory">
             <rabbit:listener queues="queueTest" ref="messageReceiver"/>
    </rabbit:listener-container>    -->  
        
</beans>